<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bTnDesign5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdCIFhZ
        WiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        AHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAA
        AChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAA
        AAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAA
        ABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMABAMDBAMDBAQDBAUEBAUGCgcGBgYG
        DQkKCAoPDRAQDw0PDhETGBQREhcSDg8VHBUXGRkbGxsQFB0fHRofGBobGv/bAEMBBAUFBgUGDAcHDBoR
        DxEaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGv/AABEIAPwA
        /AMBIgACEQEDEQH/xAAdAAEAAgIDAQEAAAAAAAAAAAAAAQIDCAUHCQYE/8QAThAAAQMCAgQKBAgKCQUB
        AAAAAAECAwQFBhIHERMxCCEiMjNBUVJykkJhgrIUNTZidHWBkRUWIzRxoaKxwdIkRFNVc5WzwvAYQ0Zj
        hdH/xAAcAQEAAgMBAQEAAAAAAAAAAAAAAgcFBggEAwH/xAA+EQACAAQEAQYJDAIDAAAAAAAAAgEDBAUG
        ERIyMRMUISJSgjM0NUFCUXGRsgcjYWJygZKhorHC0RVDU8Hx/9oADAMBAAIRAxEAPwDp+omk20n5R/Od
        6S9pTayf2jvMol6aTxu94odiKq6SnYQL7WTvu8yjayd93mUoD90qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ
        33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA
        0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRt
        ZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9rJ33eZRtZO+7zKUA0qNKl9
        tJ33eZRtpO+7zKUA0qMi+2k77vMpKTv1c9/mcYyW7hpUZFpunk8bjGm4yTdPJ43GNNx+rtENpIAJEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS3cQS3cAWm6eTxuMabjJN08njcY03EV2kYbSQASJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlu4glu4AtN08njcY03GSbp5PG4xpuIrtIw2kgAkSAAA
        AAAAAAAAAABVeS3WfkY5dIJ4vUOL1G81n4OGjastVDPUWGR0ktOx73fD5+NytTX6Z+//AKZ9Gf8AcEv+
        YVH85WrY/tixy5N/0/2bHDD9VFc9SmhWvsJ4zfR3Bo0Yu/8AHpW//RqP5zW/hG6PcP6PL/ZKPCdC6igq
        6SWSZqzvlzPR7UR3LVTIW3GFDdKpaaUjQZvXl/Z8amzz6aU0x2XI6bABvZggAAAAAAAAAAAAAAAS3cQS
        3cAWm6eTxuMabjJN08njcY03EV2kYbSQASJAAAAAAAAAFdxYq9WsTM53JO79FvBsvuN4o7niaSSwWZ+V
        WR5P6TOnblXmJ614/UYi5XWktUrlKl9J6aalm1T6JanSPH1lXbvKbEcJLR5YNHlhwnSYWoY6Nj6io20n
        Okmc1icp73cpxrtJzf8AnePjbLnLu1DzqWumEdX5H0qaZqSfybnqDh34itn0WL3EOTOMw58RW76LF7iH
        JnL7+EiWovCA7TT3hh/K3DH1fUe+03C7TT3hh/K3DH1fUe+027B/luV3vhMNefEnNcSE19Y5qtd15m/v
        N0cd8GHD2Ladldhh/wCLt1fG1ztm3XBM7L6bP4oXTdr/AEtnmykqdr59PqyNJpKGbWq8ZfmNL+MHOYxw
        VfMBXh1sxPQvpZlzLDM3lRTt7Y39f70OD3Gcp6iVVy4TZLalieGZLaU2l9wAB6j5gAAAAAAAAAlu4glu
        4AtN08njcY03GSbp5PG4xpuIrtIw2kgAkSAAAAAAI9RCNe9zI42PfK9zWMYxuZXudzWo3tLG0vBi0Ork
        ixzian1Ofx2mB6bmf2yt7V9H1cfYa/ervKs1LGfM4+jD1xPdRUj1s3RA5nQTweIrDDT4ix5RsqLw/LJS
        0U3LZRp1Krdyyfu/SbJAHN1fX1FxntPntqYsynpZVMmhDV7hj/mGEvpFR7jDUx/MNs+GR+ZYR+kVHuMN
        TH8wvXBnkFO98UTQbx4+3dPUHD3xFbvosXuIcmcZh74it30WL3EOTOfpm+JYq8IDtNPeGH8rcMfV9R77
        TcLtNPeGH8rcMfV9R77TbsH+W5Xe+Ew158Sc1xTeni/iepNF+Z0/+G33Ty29JviPUii/M6f/AA2+6bX8
        ofGn738TEYc/2904jF2DrNjezzWrEtBHW0srfTbxsd3mO5yL62mhmlnRNdtFd52VQktZZKh7vgVfl53z
        JOx6ftdR6JHA4twrbcaWGtst/gbPRVceRyekx3U9F6lReU1TSrBiCfZJ/altuX+vpM3cbclan0nmaVTm
        n0ePcD3PR5iissV5a5+y5dLU5dTamFdz091ydSnzvWdG0tVKrJKzpMc1YreZLaQ7I+4kAHsPmAAAAAAC
        W7iCW7gC03TyeNxjTcZJunk8bjGm4iu0jDaSACRIAAAAAA+40RaPn6SMcUdqexUt0P8ASLhKnVEjuZ+l
        7tSe0eiNPTxUsEUELEZHE1GManNaieidDcFLB62TA81+qmZai9S7RmtvG2FmtGfeut3tGwGo5wxfdGuN
        xaWseonVh/Isaz0vN6fOPFiPX1nwmlPSdbNF+HX3K4fl6uXMykpUdyp5ez1J2r6J9lcK6C2UNRW1kiRU
        1OxZJXrzUaia1U86NJ+kKs0l4trLxUue2iRzobfAruTHC1eLk9529x8MNWNr1VZP4Nd39H2uldzKV0cW
        OLxjjO9Y6vEl0xLWOqZ3cUUbeTHAzuRp1J+txwTubxFijuZyf+cZ0VJp5NJI5KUulVK4aY019b7j1Aw7
        8RWz6LF7iHJnGYe+Ird9Fi9xDkzk6ZviW4vCA7TT3hh/K3DH1fUe+03C7TT3hh/K3DH1fUe+027B/luV
        3vhMNefEnNcE1LxqbB6B+EFU4aqaXDWOKx9TZpXNipK2Vdb6V25rHu62fO6vCa+7yqt1px7i9LraKe70
        0ZM+Hs+g0KlqptI+tD1QZI16IrXI5russa58FvSjLiG0y4UvlQstytcbX0sj15U1NuRPWrF5P6MpsYc0
        V9DNt1U9PN3KWdT1CVMpZiekdLcJHRq7HGDXXC2xZrzZmunp0RvKki/7kXtN42/ORposiZmnqirczcq9
        Z5yaXMIfiPpFvdoYzJS7X4RSd3YycaInhdmT2S0cA3WMddvePDrL/I1a/wBJtnw7x8WAC4TTwAAAAAAS
        3cQS3cAWm6eTxuMabjJN08njcY03EV2kYbSQASJAAAEdRMcEtZNFTQNV0lQ9sLGp1uc7KR1ofT6NaBLp
        pEwrSO5TH3WnV3rRHo//AGnhrJ3NqeZN7KxifaSmuaqHorhqyw4fsNutdPqbHRUsUDNXzWo3+ByoTcgO
        TmaLRjGJbUIZLkdC8KzFz7Bo/itFHJkqr5UbB3bsU45P4N9o0o3mwHC7uzqrH9ot6a8lHbVf7b3r/BqH
        QB0LgujhTWhH879Yrq9Tmm1jQ7IKScwuVdu/52m7vtiYRdx6f4d+IrZ9Fi9xDkzjMO/EVs+ixe4hyZyL
        M3xLhXhAdpp7ww/lbhj6vqPfabhdpp7ww/lbhj6vqPfabdg/y3K73wmGvPiTmuIAOjytz6XRzimTBOOb
        HfIZckdPUtbVd1ad/FIi/Yub2T0pje17GvauZHN1o48rZOYvqPSLRTdn33RxhivnXNLJb4c7u1zWal/W
        hTHyg0aq8mqh5+rH/o3PDs7Uryz7I1N4YthayswxfmN437Wild9z2fxNsjonhZUDKrRa2odzqO5U8jV/
        TmZ/vNJw1PjT3eQ6+dsvf0GcucvlaN4GkoAOnSsAAAAAAAS3cQS3cAWm6eTxuMabjJN08njcY03EV2kY
        bSQASJAAADqPtND0rYNKuEnu5v4QYn3tc0+KXi1HL4TuH4JxZYLhmy/BLlTyud81JUzfs6zF3OW02hnS
        186t+x6aV9E9G+senQKpuQscplsmi/CpardLLnLryutsKt8ynS5srwxLC+G9YavjE/JzwS0b3d1yLnb5
        ta+U1q6zpPCk5Z1lkRh6MNPuKyuqaKxwVdu/52lirty+z+82p9sTFLuPT/D3xDbvo0fuIcl1HG4fc38B
        23jT82j9xDkdbdW9DkWZ4SPtLfSPQpZdxp3wxPlZhj6vm/1Wm4Sq3VvQ0/4YbmuxXhjK7+oTe+02/Bvl
        uV3vhMRefEWNcQAdHFblV5vKPQrQK10eiLCqP5zqTN5lVx567J9Q5IYGukkfyGNTerncSIemuDLImGsJ
        2Ozt/qNDDA75yoxGqv3lS/KHNWFPIk+ttXu/9Nsw6nXdznTpXhTKxuiOuR29aumRvi2rTurrU154Xl2+
        C4DtlvavKrrkxXN7zGNVzv2spWlgSL3WnWHaU2a4x00b/ZNNQAdSlWgAAAAAAlu4glu4AtN08njcY03G
        Sbp5PG4xpuIrtIw2kgAkSAAABR7VyLk3+iXB+Rhn0A9HdFWJG4t0fYfu6P2ks1Ixsv8Aitbqfr9pqn2Z
        qnwRcbsYl0wdVycvMtdRZnb2rqSVE9rUvtKbWauI5XvVC1tuM2njwz6PYWpQz1qKdHOs9O+Bn480c3Gk
        o40kuNLlq6Tk8e1ZytSfpTW32jz5Y5HNRcuVV9F3UeqO/j6jSLhHaJJMHX+TEtjp1dYrrJnqEYnFS1C8
        7wsfvT52ZO6bzga8pTTGoZsehtv2vUYK+0LOvLp6PE6NABeBpByDMQ3tiNRl7urURuprUr5tTf2i34x3
        v+/bt/mE38xxmoajw8zpv+Nfwn15eb2jkPxhvX9+3j/MJv5j8tZX1lc5r7hV1FY9jdTXTzvkVE9WteIw
        8ZJNKWQkc0SB+Rmu3FhqIVdSEmWioqq511NQ2ymfWVtW9I4YWb3vXqPrMdZS634QIrBmbKB2Twf8Duxt
        pHtzpos1vtDm1tU5zeJXIvIZ9r9TvZPQI610L6MYNF+EYqKRUlu1XlluE/bLq5rfmN3N+1es7K18Ws5r
        xJd/8vXtNTZDqqWXbKTmlOsI8WHqNL+FtiT8JY5tllifmjtdIsj07JZF/wDxqG4F7u9LYbTXXW5SpFS0
        UD5pXu9FrUzOPNPFGIZ8W4kut8rcyTXGqfPqd6DPQZ7LcrfZM7gS3tUXCNS3BIfqieC/z9FPyfaOLABf
        poIAAAAAAJbuIJbuALTdPJ43GNNxkm6eTxuMabiK7SMNpIAJEgAAAAADksN4hr8JX633uzv2dbQztkYn
        ovb6TF9Tm60PRzBOL6DHOGKC+Wh6OgqYmq5mbjjf1sX1ovEeaCdh2joR0vy6Lb6+Gu2kuHK97Uq4k5Sw
        P3JMxvvJ1p4Su8X2FrnI5xIX51P1KbBZ6/mr8m/Bjf8AVT8d1tVHe7dU2+600dVRVLHRzQyNzNe13Oa4
        tbrjSXahgrbdOyppahjZIpI3Zke13Ncjj9SIUH0rH1RgWB1XU0b0vcHa74HqKm7YWjmu2HXKq7Njc81K
        3uq302etPaOkkcj262LmQ9UVTNzuNDqHHnB1wbjaSSrjpXWW5y8bqqi5GZ3a9nNUtOy45eRLhJuC6vre
        f7zVK6xa21yPwmhupE6hrNgMQcEjFtBJmw9c7bd4eybNBI33kd97T4+Xg7aS4nuRcM7T1srYFRf2yx5G
        JLPPXNahfvjp/c1yZbqyW3SjHV+v1DjO3aHgy6Sq5dU9ro7cnbU1rF/08x2fhTgfU8cjJ8aX19T1upaF
        myZ+hZF4/KjTy1eK7PSL4WDfZ6x9JVqrJvoaTWXDuHLvi27xWvDdDLX1r3cyNvExva925ietTdjQroJo
        tGtO26XdY6/E8zNT5mt5FMi72R/xXe47Hwrguw4KoPgWF7XT26De7Zs5T3dqu3u+0+gKmv2K6i7w5GVD
        RK/OPtNuoLSlJ136zAA6i036ZaXRhZ/g9BkqsRVzXJSQLx5P/Y/5jf1/eajS0s6snLJkrqZjMzZqSUZ3
        4KdX8KnSg2RGYIss/GmWW6vY7c3eyH7d6/YatazJU1VRX1U9XcJn1NVUSummme7Wsj3LrVVKes6XsVql
        2eiWQu70vaVhW1bVc9pkSQAbAeEAAAAAAEt3EEt3AFpunk8bjGm4yTdPJ43GNNxFdpGG0kAEiQAAAAAA
        AAB2nod033LRfU/Aa9klxw3M/XJTIvLgVec+PX+tm7sN38K4vsuM7VDc8NV8dbSvbvY7jY7sVu9F9Snm
        Zr7TmML4sveCroy5YXuU1BUt56Ndrjkb2PZuVCur/g+Rc2afS9Sb+ljYrdeHpvm5vWQ9ONY4jWPAnC3o
        KqNlJpDt7rdPu+G0bHSwr85Wc9PszHf2H8a4fxXTtnw7d6O4xu5uxma5fu3lL11pr7a2molRX9vebpIr
        KeqXOWxz4AMYewAGKWeKBivnkYxic5znZUP3LMGRNWriB1djHhA4Hwakkc10Zc69nF8Fofyy5uxVbxN9
        pTWbSJwksUY0ZNRWVfxdtT+JzYX653t9b/R+w2S14bud0bOWmSdpjFVVzp6Xc2cTvrS/whrVgRk9ow6r
        LtiPLqyI7XFTO7ZHJ1+pPt1Gll3u9wv10qbreqqStr6l2eWZ68a/Nb2NT0Wn4cqJr1dbtbvnFi8LHh6l
        sidTrPHixo1dcZta3Tw7IABtZiwAAAAAAAAAS3cQS3cAWm6eTxuMabjJN08njcY03EV2kYbSQASJAAAA
        AAAAAAAAARK+nlSalkfBMm6SF7mKntIAQZFaGUSUI6T6+0aVsc2NES24qujWJzWST7ZPufrPoYuEXpMi
        T5S5vHQwL/sOruPsJMRMs1smxzenSPdgemFXUL0QdvxHYlbp80kV8askxROxruuGGONfMjT467Ylvd+e
        518vVwuObqnqnvTy68pxf2hUQ+km10NM2qXKVfYpF6qe/Q7tEhrEYmpiZSwBleB5gAD9AAAAAAAAAAAA
        AJbuIJbuALTdPJ43GNNxkm6eTxuMabiK7SMNpIAJEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AS3cQS3cAWm6eTxuMabjJN08njcY03EV2kYbSQASJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Alu4glu4AtN0z/E4oZahPyr/ABqUILtIwKgZUGVCZLMAZUGVAMwBlQZUAzAGVBlQDMAZUGVAMwBlQZUA
        zAGVBlQDMAZUGVAMwBlQZUAzAGVBlQDMAZUGVAMwBlQZUAzAGVBlQDMAZUGVAMwS3cRlQsCJ/9k=
</value>
  </data>
</root>